{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/SearchBar.js\";\nimport React, { useEffect, useState } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = _ref => {\n  let {\n    /*userList, filteredList,*/query,\n    setQuery\n  } = _ref;\n  const filterBySearch = e => {\n    const input = e.target.value;\n    // Access input value\n    setQuery(input);\n    // console.log(query);\n    /*let updatedList = [...userList]\n     // if (query.trim().length === 0) {\n    //   setQuery('')\n    // }\n     updatedList = updatedList.filter((item) => {\n      return item['name'].toLowerCase().indexOf(input.toLowerCase()) !== -1\n    })\n    // passing this updatedList to be rendered\n    filteredList(updatedList)*/\n    // but what about if the string is empty\n    // maybe write an if indexOf === -1? then render original list\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Search Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      className: \"input\",\n      value: query,\n      type: \"text\",\n      onChange: filterBySearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SearchBar","_ref","query","setQuery","filterBySearch","e","input","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/SearchBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './SearchBar.css'\n\nconst SearchBar = ({ /*userList, filteredList,*/ query, setQuery }) => {\n\n  const filterBySearch = (e) => {\n\n      const input  = e.target.value\n      // Access input value\n      setQuery(input)\n      // console.log(query);\n      /*let updatedList = [...userList]\n\n      // if (query.trim().length === 0) {\n      //   setQuery('')\n      // }\n\n      updatedList = updatedList.filter((item) => {\n        return item['name'].toLowerCase().indexOf(input.toLowerCase()) !== -1\n      })\n      // passing this updatedList to be rendered\n      filteredList(updatedList)*/\n      // but what about if the string is empty\n      // maybe write an if indexOf === -1? then render original list\n  }\n\n  return (\n    <div className='search-container'>\n      <label htmlFor='search'><b>Search Users</b></label>\n      <input id='search' className=\"input\" value={query} type=\"text\" onChange={filterBySearch}/>\n    </div>\n  )\n}\n\nexport default SearchBar\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGC,IAAA,IAAqD;EAAA,IAApD;IAAE,2BAA4BC,KAAK;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAEhE,MAAMG,cAAc,GAAIC,CAAC,IAAK;IAE1B,MAAMC,KAAK,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7B;IACAL,QAAQ,CAACG,KAAK,CAAC;IACf;IACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAGM;IACA;EACJ,CAAC;;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BX,OAAA;MAAOY,OAAO,EAAC,QAAQ;MAAAD,QAAA,eAACX,OAAA;QAAAW,QAAA,EAAG;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACnDhB,OAAA;MAAOiB,EAAE,EAAC,QAAQ;MAACP,SAAS,EAAC,OAAO;MAACD,KAAK,EAAEN,KAAM;MAACe,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEd;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtF;AAEV,CAAC;AAAAI,EAAA,GA7BKnB,SAAS;AA+Bf,eAAeA,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}