{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/MainNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainNote = _ref => {\n  _s();\n  let {\n    noteInfo,\n    onModification\n  } = _ref;\n  const [noteDisplay, setNoteDisplay] = useState({\n    id: '',\n    name: '',\n    age: ''\n  });\n\n  // const removeUser = (e) => {\n  //   // console.log(e.currentTarget);\n  //   onHandleClick({\n  //     id: id,\n  //     name: name,\n  //     age: age\n  //   })\n  // }\n\n  useEffect(() => {\n    setNoteDisplay({\n      id: noteInfo.id,\n      name: noteInfo.name,\n      age: noteInfo.age\n    });\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo]);\n  const mainNoteChange = e => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // onModification(noteDisplay)\n    console.log(userInfo);\n    setNoteDisplay(oldNote => {\n      return {\n        ...oldNote,\n        age: newInput\n      };\n    });\n  };\n\n  // once a new state (noteDisplay) is set, feed it back to App\n  // useEffect(() => {\n  //   onModification(noteDisplay)\n  // }, [noteDisplay])\n\n  return (\n    /*#__PURE__*/\n    // <div className={styles['notes-main-screen']}>\n    //   {!modifiable && <div className={styles['titles-list']}>\n    //     {<div className={styles.name}>{name}</div>}\n    //     {/* {<div>{`Key: ${id}`}</div>} */}\n    //     {<Button onClick={removeUser} className={classes.remove}>Remove</Button>}\n    //     {<div onClick={toggleModify}>Modify</div>}\n    //   </div>}\n    //   <div className={styles.body}>{modifiable && <NewBodyInput id={id} onModData={onModData}/>}</div>\n    //   {/* <div>{age}</div> */}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"main-note-area\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea-note\",\n        onChange: mainNoteChange,\n        value: noteDisplay.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(MainNote, \"il1lbT9lS+XoSucJ7KQhSWYdtxQ=\");\n_c = MainNote;\nexport default MainNote;\nvar _c;\n$RefreshReg$(_c, \"MainNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainNote","_ref","_s","noteInfo","onModification","noteDisplay","setNoteDisplay","id","name","age","mainNoteChange","e","newInput","target","value","console","log","userInfo","oldNote","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/MainNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainNote.css'\n\n\nconst MainNote = ({ noteInfo, onModification }) => {\n\n  const [noteDisplay, setNoteDisplay] = useState({id: '', name: '', age: ''})\n\n  // const removeUser = (e) => {\n  //   // console.log(e.currentTarget);\n  //   onHandleClick({\n  //     id: id,\n  //     name: name,\n  //     age: age\n  //   })\n  // }\n\n  useEffect(() => {\n    setNoteDisplay({id: noteInfo.id, name: noteInfo.name, age: noteInfo.age})\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo])\n\n  const mainNoteChange = (e) => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // onModification(noteDisplay)\n    console.log(userInfo);\n    setNoteDisplay((oldNote) => {\n      return {\n        ...oldNote,\n        age: newInput\n      }\n    })\n\n  }\n\n  // once a new state (noteDisplay) is set, feed it back to App\n  // useEffect(() => {\n  //   onModification(noteDisplay)\n  // }, [noteDisplay])\n\n\n  return (\n    // <div className={styles['notes-main-screen']}>\n    //   {!modifiable && <div className={styles['titles-list']}>\n    //     {<div className={styles.name}>{name}</div>}\n    //     {/* {<div>{`Key: ${id}`}</div>} */}\n    //     {<Button onClick={removeUser} className={classes.remove}>Remove</Button>}\n    //     {<div onClick={toggleModify}>Modify</div>}\n    //   </div>}\n    //   <div className={styles.body}>{modifiable && <NewBodyInput id={id} onModData={onModData}/>}</div>\n    //   {/* <div>{age}</div> */}\n    // </div>\n    <div className='main-note-area'>\n      {/* {noteDisplay.name} */}\n      {/* <div>{noteClicked.age}</div> */}\n      {/* Make it so that if no note is currently chosen, it will save as a new one */}\n      <textarea className='textarea-note' onChange={mainNoteChange} value={noteDisplay.age}></textarea>\n    </div>\n  )\n}\n\nexport default MainNote\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,QAAQ,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAE5C,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAACW,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;;EAE3E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAZ,SAAS,CAAC,MAAM;IACdS,cAAc,CAAC;MAACC,EAAE,EAAEJ,QAAQ,CAACI,EAAE;MAAEC,IAAI,EAAEL,QAAQ,CAACK,IAAI;MAAEC,GAAG,EAAEN,QAAQ,CAACM;IAAG,CAAC,CAAC;IACzE;IACA;IACA;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMO,cAAc,GAAIC,CAAC,IAAK;IAC5B;IACA,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;;IAE7B;IACA;IACA;;IAEA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACrBX,cAAc,CAAEY,OAAO,IAAK;MAC1B,OAAO;QACL,GAAGA,OAAO;QACVT,GAAG,EAAEG;MACP,CAAC;IACH,CAAC,CAAC;EAEJ,CAAC;;EAED;EACA;EACA;EACA;;EAGA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAb,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAI7BrB,OAAA;QAAUoB,SAAS,EAAC,eAAe;QAACE,QAAQ,EAAEX,cAAe;QAACI,KAAK,EAAET,WAAW,CAACI;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAY;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7F;AAEV,CAAC;AAAAvB,EAAA,CAjEKF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAmEd,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}