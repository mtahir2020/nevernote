{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/MainNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainNote = _ref => {\n  _s();\n  let {\n    selectedNote,\n    userData,\n    onModification,\n    finalUserInfo\n  } = _ref;\n  const [note, setNote] = useState( /*{id: '', name: '', age: ''}*/userData[0] || {\n    id: '',\n    name: '',\n    age: ''\n  });\n\n  // when selectedNote changes (held in App.js), if selectedNote exists, make that 'note'\n  useEffect(() => {\n    if (selectedNote) setNote(selectedNote);\n  }, [selectedNote]);\n  const mainNoteChange = e => {\n    let newInput = e.target.value;\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n\n    // when note changes, set state of 'note' with new input\n    setNote(oldNote => ({\n      ...oldNote,\n      age: newInput\n    }));\n  };\n\n  //  on saving, if selectedNote exists, modify 'note', otherwise create it\n  const onSave = () => {\n    selectedNote ? onModification(note) : finalUserInfo(note);\n  };\n  const wipeNote = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-note-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"Create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onSave,\n      children: selectedNote ? 'Update' : 'Create'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea-note\",\n      onChange: mainNoteChange,\n      placeholder: \"Type your note here..\",\n      value: note.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MainNote, \"4/KE7DJ/47OqUYoyfCpSStzQfec=\");\n_c = MainNote;\nexport default MainNote;\n\n// Need to set the note default as the first on the list\n// If there's no notes existing,\n\n// if note exists, make selectedNote array[0] by default\n// else, selectedNote will be blank\nvar _c;\n$RefreshReg$(_c, \"MainNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainNote","_ref","_s","selectedNote","userData","onModification","finalUserInfo","note","setNote","id","name","age","mainNoteChange","e","newInput","target","value","oldNote","onSave","wipeNote","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/MainNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainNote.css'\n\n\nconst MainNote = ({ selectedNote, userData, onModification, finalUserInfo }) => {\n\n  const [note, setNote] = useState(/*{id: '', name: '', age: ''}*/userData[0] || {id: '', name: '', age: ''})\n\n  // when selectedNote changes (held in App.js), if selectedNote exists, make that 'note'\n  useEffect(() => {\n    if (selectedNote) setNote(selectedNote)\n  }, [selectedNote])\n\n  const mainNoteChange = (e) => {\n    let newInput = e.target.value;\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n\n    // when note changes, set state of 'note' with new input\n    setNote((oldNote) => ({ ...oldNote, age: newInput }))\n }\n\n//  on saving, if selectedNote exists, modify 'note', otherwise create it\n const onSave = () => {\n   selectedNote ? onModification(note) : finalUserInfo(note)\n }\n\n const wipeNote = () => {\n  \n }\n\n  return (\n    <div className='main-note-area'>\n\n      {/* Make it so that if no note is currently chosen, it will save as a new one */}\n      <button type='button' >Create new</button>\n      <button type='button' onClick={onSave}>{selectedNote ? 'Update' : 'Create'}</button>\n      <textarea className='textarea-note' onChange={mainNoteChange} placeholder=\"Type your note here..\" value={note.age}></textarea>\n    </div>\n  )\n}\n\nexport default MainNote\n\n// Need to set the note default as the first on the list\n// If there's no notes existing,\n\n// if note exists, make selectedNote array[0] by default\n// else, selectedNote will be blank\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,QAAQ,GAAGC,IAAA,IAA+D;EAAAC,EAAA;EAAA,IAA9D;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAAL,IAAA;EAEzE,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,EAAC,+BAA+BQ,QAAQ,CAAC,CAAC,CAAC,IAAI;IAACK,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;;EAE3G;EACAd,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,EAAEK,OAAO,CAACL,YAAY,CAAC;EACzC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7B;IACA;IACA;;IAEA;IACAR,OAAO,CAAES,OAAO,KAAM;MAAE,GAAGA,OAAO;MAAEN,GAAG,EAAEG;IAAS,CAAC,CAAC,CAAC;EACxD,CAAC;;EAEF;EACC,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBf,YAAY,GAAGE,cAAc,CAACE,IAAI,CAAC,GAAGD,aAAa,CAACC,IAAI,CAAC;EAC3D,CAAC;EAED,MAAMY,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAG7BtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAE;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC1C3B,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAET,MAAO;MAAAG,QAAA,EAAElB,YAAY,GAAG,QAAQ,GAAG;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eACpF3B,OAAA;MAAUqB,SAAS,EAAC,eAAe;MAACQ,QAAQ,EAAEhB,cAAe;MAACiB,WAAW,EAAC,uBAAuB;MAACb,KAAK,EAAET,IAAI,CAACI;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1H;AAEV,CAAC;AAAAxB,EAAA,CArCKF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAuCd,eAAeA,QAAQ;;AAEvB;AACA;;AAEA;AACA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}