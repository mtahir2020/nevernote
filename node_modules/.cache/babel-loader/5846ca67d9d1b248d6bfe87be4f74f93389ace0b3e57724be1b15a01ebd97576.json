{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/MainNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainNote = _ref => {\n  _s();\n  let {\n    noteInfo,\n    userData,\n    onModification,\n    finalUserInfo\n  } = _ref;\n  const [newNote, setNewNote] = useState({\n    id: '',\n    name: '',\n    age: ''\n  });\n  useEffect(() => {\n    if (noteInfo) setNewNote(noteInfo);\n    //setNoteDisplay({id: noteInfo.id, name: noteInfo.name, age: noteInfo.age})\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo]);\n  const mainNoteChange = e => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    /*setNoteDisplay((oldNote) => {\n      console.log('updating NoteDisplay');\n      return {\n        ...oldNote,\n        age: newInput\n      }\n    })*/\n    if (noteInfo) {\n      onModification(noteInfo, newInput);\n    } else {\n      setNewNote(state => ({\n        ...state,\n        age: newInput\n      }));\n    }\n  };\n\n  // any time noteDisplay is updated, feed it back to App\n  useEffect(() => {\n    //onModification(noteDisplay)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-note-area\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea-note\",\n      onChange: mainNoteChange,\n      value: newNote === null || newNote === void 0 ? void 0 : newNote.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MainNote, \"4yDGjANlNQUGpDqI5iAIzN4/mLA=\");\n_c = MainNote;\nexport default MainNote;\nvar _c;\n$RefreshReg$(_c, \"MainNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainNote","_ref","_s","noteInfo","userData","onModification","finalUserInfo","newNote","setNewNote","id","name","age","mainNoteChange","e","newInput","target","value","state","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/MainNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainNote.css'\n\n\nconst MainNote = ({ noteInfo, userData, onModification, finalUserInfo }) => {\n\n  const [newNote, setNewNote] = useState({id: '', name: '', age: ''})\n\n\n\n  useEffect(() => {\n    if (noteInfo) setNewNote(noteInfo)\n    //setNoteDisplay({id: noteInfo.id, name: noteInfo.name, age: noteInfo.age})\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo])\n\n  const mainNoteChange = (e) => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    /*setNoteDisplay((oldNote) => {\n      console.log('updating NoteDisplay');\n      return {\n        ...oldNote,\n        age: newInput\n      }\n    })*/\n    if (noteInfo) {\n      onModification(noteInfo, newInput)\n    } else {\n      setNewNote((state) => ({ ...state, age: newInput }))\n    }\n  }\n\n  // any time noteDisplay is updated, feed it back to App\n  useEffect(() => {\n    //onModification(noteDisplay)\n  }, [])\n\n\n  return (\n    <div className='main-note-area'>\n\n      {/* Make it so that if no note is currently chosen, it will save as a new one */}\n      <textarea className='textarea-note' onChange={mainNoteChange} value={newNote?.age}></textarea>\n    </div>\n  )\n}\n\nexport default MainNote\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,QAAQ,GAAGC,IAAA,IAA2D;EAAAC,EAAA;EAAA,IAA1D;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAAL,IAAA;EAErE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IAACa,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAInEd,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,EAAEK,UAAU,CAACL,QAAQ,CAAC;IAClC;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5B;IACA,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;;IAE7B;IACA;IACA;IACA;IACA;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAIb,QAAQ,EAAE;MACZE,cAAc,CAACF,QAAQ,EAAEW,QAAQ,CAAC;IACpC,CAAC,MAAM;MACLN,UAAU,CAAES,KAAK,KAAM;QAAE,GAAGA,KAAK;QAAEN,GAAG,EAAEG;MAAS,CAAC,CAAC,CAAC;IACtD;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAGN,oBACEE,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAG7BpB,OAAA;MAAUmB,SAAS,EAAC,eAAe;MAACE,QAAQ,EAAER,cAAe;MAACI,KAAK,EAAET,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1F;AAEV,CAAC;AAAAtB,EAAA,CAlDKF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAoDd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}