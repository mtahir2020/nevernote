{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/MainNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainNote = _ref => {\n  _s();\n  let {\n    selectedNote,\n    userData,\n    onModification,\n    finalUserInfo\n  } = _ref;\n  const [note, setNote] = useState({\n    id: '',\n    name: '',\n    age: ''\n  });\n  useEffect(() => {\n    if (selectedNote) setNote(selectedNote);\n  }, [selectedNote]);\n  const mainNoteChange = e => {\n    let newInput = e.target.value;\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    setNote(oldNote => ({\n      ...state,\n      age: newInput\n    }));\n  };\n  const onSave = () => {\n    selectedNote ? onModification(note) : finalUserInfo(note);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-note-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onSave,\n      children: selectedNote ? 'Update' : 'Create'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea-note\",\n      onChange: mainNoteChange,\n      value: note.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MainNote, \"M6wUK0CJrTgX3K3Jh7WkQVSrCVY=\");\n_c = MainNote;\nexport default MainNote;\nvar _c;\n$RefreshReg$(_c, \"MainNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainNote","_ref","_s","selectedNote","userData","onModification","finalUserInfo","note","setNote","id","name","age","mainNoteChange","e","newInput","target","value","oldNote","state","onSave","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/MainNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainNote.css'\n\n\nconst MainNote = ({ selectedNote, userData, onModification, finalUserInfo }) => {\n\n  const [note, setNote] = useState({id: '', name: '', age: ''})\n\n  useEffect(() => {\n    if (selectedNote) setNote(selectedNote)\n  }, [selectedNote])\n\n  const mainNoteChange = (e) => {\n    let newInput = e.target.value;\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    setNote((oldNote) => ({ ...state, age: newInput }))\n }\n\n const onSave = () => {\n   selectedNote ? onModification(note) : finalUserInfo(note)\n }\n\n  return (\n    <div className='main-note-area'>\n\n      {/* Make it so that if no note is currently chosen, it will save as a new one */}\n      <button type='button' onClick={onSave}>{selectedNote ? 'Update' : 'Create'}</button>\n      <textarea className='textarea-note' onChange={mainNoteChange} value={note.age}></textarea>\n    </div>\n  )\n}\n\nexport default MainNote\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,QAAQ,GAAGC,IAAA,IAA+D;EAAAC,EAAA;EAAA,IAA9D;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAAL,IAAA;EAEzE,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAACa,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAE7Dd,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,EAAEK,OAAO,CAACL,YAAY,CAAC;EACzC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7B;IACA;IACA;IACA;IACA;IACAR,OAAO,CAAES,OAAO,KAAM;MAAE,GAAGC,KAAK;MAAEP,GAAG,EAAEG;IAAS,CAAC,CAAC,CAAC;EACtD,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,GAAGE,cAAc,CAACE,IAAI,CAAC,GAAGD,aAAa,CAACC,IAAI,CAAC;EAC3D,CAAC;EAEA,oBACER,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAG7BtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEJ,MAAO;MAAAE,QAAA,EAAElB,YAAY,GAAG,QAAQ,GAAG;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eACpF5B,OAAA;MAAUqB,SAAS,EAAC,eAAe;MAACQ,QAAQ,EAAEhB,cAAe;MAACI,KAAK,EAAET,IAAI,CAACI;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtF;AAEV,CAAC;AAAAzB,EAAA,CA9BKF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAgCd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}