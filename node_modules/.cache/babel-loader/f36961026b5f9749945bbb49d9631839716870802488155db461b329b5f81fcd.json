{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/MainNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainNote = _ref => {\n  _s();\n  let {\n    noteInfo,\n    userData,\n    onModification\n  } = _ref;\n  //const [noteDisplay, setNoteDisplay] = useState({id: '', name: '', age: ''})\n\n  useEffect(() => {\n    //setNoteDisplay({id: noteInfo.id, name: noteInfo.name, age: noteInfo.age})\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo]);\n  const mainNoteChange = e => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    /*setNoteDisplay((oldNote) => {\n      console.log('updating NoteDisplay');\n      return {\n        ...oldNote,\n        age: newInput\n      }\n    })*/\n    onModification();\n  };\n\n  // any time noteDisplay is updated, feed it back to App\n  useEffect(() => {\n    //onModification(noteDisplay)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-note-area\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea-note\",\n      onChange: mainNoteChange,\n      value: noteInfo.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MainNote, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = MainNote;\nexport default MainNote;\nvar _c;\n$RefreshReg$(_c, \"MainNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainNote","_ref","_s","noteInfo","userData","onModification","mainNoteChange","e","newInput","target","value","className","children","onChange","age","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/MainNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainNote.css'\n\n\nconst MainNote = ({ noteInfo, userData, onModification }) => {\n\n  //const [noteDisplay, setNoteDisplay] = useState({id: '', name: '', age: ''})\n\n  useEffect(() => {\n    //setNoteDisplay({id: noteInfo.id, name: noteInfo.name, age: noteInfo.age})\n    // return () => {\n    //   second\n    // }\n  }, [noteInfo])\n\n  const mainNoteChange = (e) => {\n    // console.log(e.target.value);\n    let newInput = e.target.value;\n\n    // we don't want it to update state on every keystroke - just after some keystroke inactivity and a validation\n    // once it updates, it should be fed back into state in APP\n    // setTimeout(() => {\n    //   console.log('500 ms down');\n    // }, 500)\n    /*setNoteDisplay((oldNote) => {\n      console.log('updating NoteDisplay');\n      return {\n        ...oldNote,\n        age: newInput\n      }\n    })*/\n    onModification()\n  }\n\n  // any time noteDisplay is updated, feed it back to App\n  useEffect(() => {\n    //onModification(noteDisplay)\n  }, [])\n\n\n  return (\n    <div className='main-note-area'>\n\n      {/* Make it so that if no note is currently chosen, it will save as a new one */}\n      <textarea className='textarea-note' onChange={mainNoteChange} value={noteInfo.age}></textarea>\n    </div>\n  )\n}\n\nexport default MainNote\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,QAAQ,GAAGC,IAAA,IAA4C;EAAAC,EAAA;EAAA,IAA3C;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EAEtD;;EAEAJ,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;EAAA,CACD,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,MAAMG,cAAc,GAAIC,CAAC,IAAK;IAC5B;IACA,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;;IAE7B;IACA;IACA;IACA;IACA;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;IACIL,cAAc,EAAE;EAClB,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAGN,oBACEE,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAG7Bb,OAAA;MAAUY,SAAS,EAAC,eAAe;MAACE,QAAQ,EAAEP,cAAe;MAACI,KAAK,EAAEP,QAAQ,CAACW;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1F;AAEV,CAAC;AAAAhB,EAAA,CA3CKF,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}