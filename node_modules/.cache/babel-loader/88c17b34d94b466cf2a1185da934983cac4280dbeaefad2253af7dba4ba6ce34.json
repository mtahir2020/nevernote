{"ast":null,"code":"var _jsxFileName = \"/Users/mt/react/simple-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\n// import UserBox from './UserBox';\nimport styles from './User.module.css';\nimport TitlesList from './TitlesList';\nimport Header from './Header';\nimport MainNote from './MainNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInfo, setUserInfo] = useState(() => JSON.parse(localStorage.getItem('notes')) || [{\n    id: 4,\n    title: 'Go to gym',\n    body: 'do legs workout'\n  }, {\n    id: 3,\n    title: 'Holiday',\n    body: 'withdraw holiday money'\n  }, {\n    id: 2,\n    title: 'Study React',\n    body: 'do udemy course'\n  }, {\n    id: 1,\n    title: 'create portfolio',\n    body: 'add all projects to portfolio'\n  }]);\n  const [query, setQuery] = useState('');\n  const [selectedNoteId, setSelectedNoteId] = useState();\n\n  // useEffect?????\n  const reOrderList = () => {\n    // let currentNoteId = selectedNoteId\n    // then listen to a click event (or useEffect) and..\n    // let newNoteId = selectedNoteId\n  };\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(userInfo));\n  }, [userInfo]);\n\n  // filtered users list\n  const filteredUsers = userInfo.filter(item => {\n    return item['title'].toLowerCase().indexOf(query.toLowerCase()) !== -1;\n  });\n\n  // When adding a new item to top of the list, the id will break if if it's trying to take the last item from the array\n  const finalUserInfo = info => {\n    setUserInfo(oldUserInfo => {\n      return [\n      //...oldUserInfo,\n      {\n        id: userInfo.length > 0 ? userInfo[0].id + 1 : 1,\n        title: info.body.split('\\n')[0],\n        body: info.body\n      }, ...oldUserInfo];\n    });\n  };\n\n  // check if this works properly!!!!!\n  // const reOrder = (id) => {\n  //   console.log(id);\n  //   let firstItem;\n  //   const reOrderedItems = filteredUsers.filter((item) => {\n  //     if (item.id === id) {\n  //       firstItem = [item];\n  //       return false\n  //     } else {\n  //       return true\n  //     }\n  //   })\n  //   setUserInfo([...firstItem, ...reOrderedItems])\n  // }\n\n  // will have to change rendering\n\n  const removePerson = user => {\n    // console.log(user);\n    setUserInfo(oldFilteredUsers => {\n      const updatedUsers = oldFilteredUsers.filter(person => {\n        return person.id !== user.id;\n      });\n      return updatedUsers;\n    });\n  };\n  const onModification = (mod, newInput) => {\n    // console.log(mod);\n    setUserInfo(oldUserInfo => {\n      const updatedInfo = oldUserInfo.map(oldItem => {\n        return oldItem.id === mod.id ? {\n          ...oldItem,\n          title: newInput.split('\\n')[0],\n          body: newInput\n        } : oldItem;\n      });\n      return updatedInfo;\n    });\n  };\n  const noteClicked = note => {\n    // console.log(noteClicked);\n    setSelectedNoteId(note.id);\n  };\n  const resetMemo = toReset => {\n    // console.log(toReset);\n    setSelectedNoteId(toReset.id);\n  };\n\n  // to find the object with the note id\n  const noteToDisplay = useMemo(() => {\n    return userInfo.find(oneNote => {\n      return selectedNoteId === oneNote.id;\n    });\n  }, [selectedNoteId, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      query: query,\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['card-container'],\n      children: [/*#__PURE__*/_jsxDEV(TitlesList /*reOrder={reOrder}*/, {\n        noteClicked: noteClicked,\n        userData: userInfo,\n        filteredUsers: filteredUsers,\n        onModification: onModification,\n        onRemovePerson: removePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainNote, {\n        resetMemo: resetMemo,\n        selectedNote: noteToDisplay,\n        userData: userInfo,\n        filteredUsers: filteredUsers,\n        onModification: onModification,\n        onRemovePerson: removePerson,\n        finalUserInfo: finalUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q8qREhDdIsUhUnXuu6Jy2JD0KLY=\");\n_c = App;\nexport default App;\n\n// when a note is open, have that selectednoteID\n// make an 'oldnote' and 'newnoteid' variable\n// when a new note is clicked, let it swap the id's\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","styles","TitlesList","Header","MainNote","jsxDEV","_jsxDEV","App","_s","userInfo","setUserInfo","JSON","parse","localStorage","getItem","id","title","body","query","setQuery","selectedNoteId","setSelectedNoteId","reOrderList","setItem","stringify","filteredUsers","filter","item","toLowerCase","indexOf","finalUserInfo","info","oldUserInfo","length","split","removePerson","user","oldFilteredUsers","updatedUsers","person","onModification","mod","newInput","updatedInfo","map","oldItem","noteClicked","note","resetMemo","toReset","noteToDisplay","find","oneNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userData","onRemovePerson","selectedNote","_c","$RefreshReg$"],"sources":["/Users/mt/react/simple-project/src/App.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\n// import UserBox from './UserBox';\nimport styles from './User.module.css'\nimport TitlesList from './TitlesList';\nimport Header from './Header'\nimport MainNote from './MainNote';\n\nfunction App() {\n\n  const [userInfo, setUserInfo] = useState(\n    () => JSON.parse(localStorage.getItem('notes')) ||\n    [\n      {id: 4, title: 'Go to gym', body: 'do legs workout'},\n      {id: 3, title: 'Holiday', body: 'withdraw holiday money'},\n      {id: 2, title: 'Study React', body: 'do udemy course'},\n      {id: 1, title: 'create portfolio', body: 'add all projects to portfolio'}\n    ]\n  )\n\n  const [query, setQuery] = useState('')\n  const [selectedNoteId, setSelectedNoteId] = useState()\n\n  // useEffect?????\n  const reOrderList = () => {\n    // let currentNoteId = selectedNoteId\n    // then listen to a click event (or useEffect) and..\n    // let newNoteId = selectedNoteId\n    \n  }\n\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(userInfo))\n  }, [userInfo])\n\n  // filtered users list\n  const filteredUsers = userInfo.filter((item) => {\n    return item['title'].toLowerCase().indexOf(query.toLowerCase()) !== -1\n  })\n\n  // When adding a new item to top of the list, the id will break if if it's trying to take the last item from the array\n  const finalUserInfo = (info) => {\n    setUserInfo((oldUserInfo) => {\n      return [\n        //...oldUserInfo,\n        {\n          id: userInfo.length > 0 ? userInfo[0].id + 1 : 1,\n          title: info.body.split('\\n')[0],\n          body: info.body\n        },\n        ...oldUserInfo\n      ]\n    })\n  }\n\n  // check if this works properly!!!!!\n  // const reOrder = (id) => {\n  //   console.log(id);\n  //   let firstItem;\n  //   const reOrderedItems = filteredUsers.filter((item) => {\n  //     if (item.id === id) {\n  //       firstItem = [item];\n  //       return false\n  //     } else {\n  //       return true\n  //     }\n  //   })\n  //   setUserInfo([...firstItem, ...reOrderedItems])\n  // }\n\n  // will have to change rendering\n\n  const removePerson = (user) => {\n    // console.log(user);\n    setUserInfo((oldFilteredUsers) => {\n      const updatedUsers = oldFilteredUsers.filter((person) => {\n        return person.id !== user.id\n      })\n      return updatedUsers\n    })\n  }\n\n  const onModification = (mod, newInput) => {\n    // console.log(mod);\n    setUserInfo((oldUserInfo) => {\n      const updatedInfo = oldUserInfo.map((oldItem) => {\n        return oldItem.id === mod.id ? { ...oldItem, title: newInput.split('\\n')[0], body: newInput } : oldItem\n      })\n      return updatedInfo\n    })\n  }\n\n  const noteClicked = (note) => {\n    // console.log(noteClicked);\n    setSelectedNoteId(note.id)\n  }\n\n  const resetMemo = (toReset) => {\n    // console.log(toReset);\n    setSelectedNoteId(toReset.id)\n  }\n\n\n// to find the object with the note id\n  const noteToDisplay = useMemo(() => {\n    return userInfo.find((oneNote) => {\n      return selectedNoteId === oneNote.id\n    })\n  }, [selectedNoteId, userInfo])\n\n  return (\n    <div className='main'>\n      {/* {console.log(userInfo)} */}\n      <Header query={query} setQuery={setQuery}/>\n      {/* <div className='search-add-container'>\n        <UserBox finalUserInfo={finalUserInfo}/>\n      </div> */}\n      <div className={styles['card-container']}>\n        <TitlesList /*reOrder={reOrder}*/ noteClicked={noteClicked} userData={userInfo} filteredUsers={filteredUsers} onModification={onModification} onRemovePerson={removePerson}/>\n        <MainNote resetMemo={resetMemo} selectedNote={noteToDisplay} userData={userInfo} filteredUsers={filteredUsers} onModification={onModification} onRemovePerson={removePerson} finalUserInfo={finalUserInfo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// when a note is open, have that selectednoteID\n// make an 'oldnote' and 'newnoteid' variable\n// when a new note is clicked, let it swap the id's\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}